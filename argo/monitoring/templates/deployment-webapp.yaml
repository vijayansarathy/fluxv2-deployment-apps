---
apiVersion: v1
kind: Namespace
metadata:
  name: golang

---  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: golang
  annotations:
    argocd.argoproj.io/sync-wave: "110"   
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webapp
      role: scrape-target
  template:
    metadata:
      labels:
        app: webapp
        role: scrape-target
      annotations:
        prometheus.io/scrape: 'true'     
        prometheus.io/port: '3000'     
        prometheus.io/path: '/metrics'        
    spec: 
      containers:          
        - name: golang
          image: public.ecr.aws/awsvijisarathy/prometheus-webapp:2.0
          imagePullPolicy: Always   
          resources:
            requests:
              cpu: "128m"
              memory: "128Mi"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP              
---
apiVersion: v1
kind: Service
metadata:
  name: webapp-svc
  namespace: golang
  annotations:
    argocd.argoproj.io/sync-wave: "120"   
spec:
  sessionAffinity: None
  type: ClusterIP  
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: webapp
    role: scrape-target  

---
apiVersion: batch/v1
kind: Job
metadata:
  generateName: post-webapp
  namespace: golang
  annotations:
    argocd.argoproj.io/sync-wave: "130"   
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
    argocd.argoproj.io/sync-wave: "3"
spec:
  template:
    spec:
      containers:
        - name: page-down
          image: alpine:latest
          command: ["sleep", "20"]
      restartPolicy: Never